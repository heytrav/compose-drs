---

base_directory: /home/ubuntu

images:
  rabbitmq:
    image: quay.io/heytrav/rabbitmq
    tag: latest
  mariadb:
    image: mysql
    tag: latest
  api:
    image: quay.io/heytrav/domain-api
    tag: 1.2.6
  nodepp:
    image: quay.io/heytrav/nodepp
    tag: 1.2.4
  nginx:
    image: quay.io/heytrav/drs-nginx
    tag: 0.1.0
  memcached:
    image: memcached
    tag: latest

service_list:
  rabbitmq:
    image: "{{ images.rabbitmq.image  }}:{{ images.rabbitmq.tag  }}"
    ports:
      - 15672:15672
    env_file: .stack_env
  domaindb:
    image: "{{ images.mariadb.image  }}:{{ images.mariadb.tag  }}"
    env_file: .stack_env
    secrets:
      - mysql_password
      - mysql_root_password
      - mysql_database
      - mysql_user
    volumes:
      - /var/lib/mysql:/var/lib/mysql
    deploy:
      placement:
        constraints:
          - node.labels.role == database
  celery:
    image: "{{ images.api.image  }}:{{ images.api.tag  }}"
    command: ["celery", "-A", "application", "worker", "-l", "info"]
    depends_on:
      - rabbitmq
    env_file: .stack_env
    environment:
      SENTRY_DSN_FILE: /run/secrets/celery_sentry_dsn
      RELEASE_VERSION: "{{ images.api.tag  }}"
    secrets:
      - mysql_database
      - mysql_user
      - mysql_password
      - celery_sentry_dsn
      - django_secret_key
      - jwt_secret_key
      - logzio_token
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 10s
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
  centralnic:
    image: "{{ images.nodepp.image  }}:{{ images.nodepp.tag  }}"
    command: ["node", "./lib/rabbit-epp.js", "-j", "-f", "/run/secrets/centralnic_test_config", "-r", "centralnic-test", "--loglevel", "debug"]
    healthcheck: 
      test: ["CMD", "node", "./lib/healthcheck.js", "-j", "-f", "/run/secrets/centralnic_test_config", "-r", "centralnic-test", "--loglevel", "debug"]
      interval: 1m
      timeout: 20s
      retries: 3
    depends_on:
      - rabbitmq
    env_file: .stack_env
    environment:
      EPP_LOGIN_FILE: /run/secrets/centralnic_test_login
      EPP_PASSWORD_FILE: /run/secrets/centralnic_test_password
      RELEASE_VERSION: "{{ images.nodepp.tag  }}"
    secrets:
      - centralnic_test_login
      - centralnic_test_password
      - centralnic_test_config
      - nodepp_sentry_dsn
      - logzio_token
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 10s
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
  nzrs:
    image: "{{ images.nodepp.image  }}:{{ images.nodepp.tag  }}"
    command: ["node", "./lib/rabbit-epp.js", "-j", "-f", "/run/secrets/nzrs_test_config", "-r", "nzrs-test", "--loglevel", "debug"]
    healthcheck: 
      test: ["CMD", "node", "./lib/healthcheck.js", "-j", "-f", "/run/secrets/nzrs_test_config", "-r", "nzrs-test", "--loglevel", "debug"]
      interval: 1m
      timeout: 20s
      retries: 3
    depends_on:
      - rabbitmq
    env_file: .stack_env
    environment:
      EPP_LOGIN_FILE: /run/secrets/nzrs_test_login
      EPP_PASSWORD_FILE: /run/secrets/nzrs_test_password
      RELEASE_VERSION: "{{ images.nodepp.tag  }}"
    secrets:
      - nzrs_test_login
      - nzrs_test_password
      - nzrs_test_config
      - nodepp_sentry_dsn
      - nzrs-epp-test.pem
      - nzrs-epp-test.key
      - logzio_token
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 10s
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
  cocca:
    image: "{{ images.nodepp.image  }}:{{ images.nodepp.tag  }}"
    command: ["node", "./lib/rabbit-epp.js", "-j", "-f", "/run/secrets/cocca_test_config", "-r", "cocca-test", "--loglevel", "debug"]
    healthcheck: 
      test: ["CMD", "node", "./lib/healthcheck.js", "-j", "-f", "/run/secrets/cocca_test_config", "-r", "cocca-test", "--loglevel", "debug"]
      interval: 1m
      timeout: 20s
      retries: 3
    depends_on:
      - rabbitmq
    env_file: .stack_env
    environment:
      EPP_LOGIN_FILE: /run/secrets/cocca_test_login
      EPP_PASSWORD_FILE: /run/secrets/cocca_test_password
      RELEASE_VERSION: "{{ images.nodepp.tag  }}"
    secrets:
      - cocca_test_login
      - cocca_test_password
      - cocca_test_config
      - nodepp_sentry_dsn
      - logzio_token
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 10s
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
  migrate:
    image: "{{ images.api.image  }}:{{ images.api.tag  }}"
    command: ["python3", "manage.py", "migrate"]
    depends_on:
      - domaindb
    env_file: .stack_env
    environment:
      SENTRY_DSN_FILE: /run/secrets/domain_api_sentry_dsn
      RELEASE_VERSION: "{{ images.api.tag  }}"
    secrets:
      - mysql_database
      - mysql_user
      - mysql_password
      - django_secret_key
      - jwt_secret_key
      - logzio_token
      - domain_api_sentry_dsn
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 1
  api:
    image: "{{ images.api.image  }}:{{ images.api.tag  }}"
    command: ["python3", "manage.py", "runserver", "0.0.0.0:8000"]
    #command: ["gunicorn", "application.wsgi", "-w", "1", "-b", "0.0.0.0:8000"]
    depends_on:
      - rabbitmq
      - domaindb
    env_file: .stack_env
    environment:
      SENTRY_DSN_FILE: /run/secrets/domain_api_sentry_dsn
      RELEASE_VERSION: "{{ images.api.tag  }}"
    secrets:
      - mysql_database
      - mysql_user
      - mysql_password
      - domain_api_sentry_dsn
      - django_secret_key
      - jwt_secret_key
      - logzio_token
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
      restart_policy:
        condition: on-failure
        delay: 10s
  nginx:
    image: "{{ images.nginx.image  }}:{{ images.nginx.tag  }}"
    ports:
      - "443:443"
    secrets:
      - site.key
      - site.crt
    command: ["nginx"]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s

  memcached:
    image: "{{ images.memcached.image  }}:{{ images.memcached.tag  }}"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
      resources:
        limits:
          memory: 64M
        reservations:
          memory: 64M


registries:
  centralnic-test:
    ssl: true
    port: 700
    host: epp-ote.centralnic.com
    services:
      - domain
      - contact
      - host
    extensions:
      - DNSSEC
    extensionClasses:
      - extension: DNSSEC
        className: SecDnsExtension
    namespaces:
      - epp: urn:ietf:params:xml:ns:epp-1.0
        domain: urn:ietf:params:xml:ns:domain-1.0
        contact: urn:ietf:params:xml:ns:contact-1.0
        host: urn:ietf:params:xml:ns:host-1.0
        DNSSEC: urn:ietf:params:xml:ns:secDNS-1.1

rabbitmq_default_user: vault_rabbitmq_default_user
rabbitmq_default_pass: vault_rabbitmq_default_pass
rabbitmq_erlang_cookie: vault_rabbitmq_erlang_cookie

sentry_environment: testing
