---
- name: Docker stack configuration
  hosts: manager
  tasks:
    - name: Gather list of docker secrets
      set_fact:
        known_secrets: "{{ api_secrets + nginx_secrets + celery_secrets + domaindb_secrets  }}"

    - name: Add centralnic secrets
      set_fact:
        known_secrets: "{{ known_secrets + centralnic_secrets }}"
      when: services.centralnic is defined

    - name: Add cocca secrets
      set_fact:
        known_secrets: "{{ known_secrets + cocca_secrets }}"
      when: services.cocca is defined

    - name: Add nzrs secrets
      set_fact:
        known_secrets: "{{ known_secrets + nzrs_secrets }}"
      when: services.nzrs is defined

    - name: Unique secrets
      set_fact:
        known_secrets: "{{ known_secrets|unique }}"

    - name: Add volumes to services
      set_fact:
        services: "{{services | combine(service_volumes, recursive=True)}}"

    - name: Initialize list of known configs
      set_fact:
        known_configs: []

    - name: Load known configs for stack
      include: ./load-drs-configs.yml
      vars:
        epp_service_config: "{{ item.value  }}"
        service_config_name: "{{ item.key }}"
        config_version_name: "{{ item.key  }}-{{ item.value.version  }}"
      when: "item.key in services"
      with_dict: "{{ configs  }}"

    - name: Debug services
      debug:
        msg: "Services: {{ services  }}  "

    - name: Create docker compose spec
      notify:
        - deploy stack
        - nodepp version
        - api version
        - celery version
      template:
        src: templates/drs-stack.yml.j2
        dest: "{{ base_directory  }}/drs-stack.yml"
        


  handlers:
    - name: deploy stack
      command: docker stack deploy -c  "{{ base_directory  }}/drs-stack.yml" domainapi

    - name: nodepp version
      when: nodepp_sentry_webhook_url is defined
      become: no
      run_once: yes
      local_action:
        module: uri
        url: "{{  nodepp_sentry_webhook_url }}"
        method: POST
        body_format: json
        status_code: 201, 208
        body: >
          {
            "version": "{{ images.nodepp.tag }}"
          }


    - name: api version
      when: api_sentry_webhook_url is defined
      become: no
      run_once: yes
      local_action:
        module: uri
        url: "{{  api_sentry_webhook_url }}"
        method: POST
        body_format: json
        status_code: 201, 208
        body: >
          {
            "version": "{{ images.api.tag }}"
          }


    - name: celery version
      when: celery_sentry_webhook_url is defined
      become: no
      run_once: yes
      local_action:
        module: uri
        url: "{{  celery_sentry_webhook_url }}"
        method: POST
        body_format: json
        status_code: 201, 208
        body: >
          {
            "version": "{{ images.api.tag }}"
          }
