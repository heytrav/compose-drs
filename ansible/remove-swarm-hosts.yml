---
- name: Terminate swarm hosts and remove all networks, security groups, etc.
  hosts: localhost
  roles: [catalystcloud]
  environment:
    OS_AUTH_URL: "{{ lookup('env', 'OS_AUTH_URL') }}"
    OS_PROJECT_NAME: "{{ lookup('env', 'OS_PROJECT_NAME') }}"
    OS_USERNAME: "{{ lookup('env', 'OS_USERNAME') }}"
    OS_PASSWORD: "{{ lookup('env', 'OS_PASSWORD') }}"
  vars:
    env_name: "staging"
  tasks:
    - include_vars:
        dir: 'group_vars/{{ env_name }}'
        ignore_files:
          - .vars.yml.swp

    - include_vars:
        dir: 'group_vars/catalystcloud'
        ignore_files:
          - .vars.yml.swp
          - .all.yml.swp

    - include_vars:
        dir: 'group_vars/database'
        name: db
        ignore_files:
          - .all.yml.swp

    - include: tasks/pre-flight-variables.yml

    - name: Connect to Catalyst Cloud
      os_auth:
        validate_certs: false

    - name: Remove floating ips from known_hosts
      known_hosts:
        name: "{{ item.name }}"
        state: absent
      with_items: "{{ cc_servers }}"

    - name: Remove floating ip
      os_floating_ip:
        validate_certs: false
        state: absent
        server: "{{ item.name }}"
      with_items:
        - "{{ cc_servers }}"

    - name: Remove swarm servers
      os_server:
        validate_certs: false
        name: "{{ item.name }}"
        state: absent
      with_items: "{{ cc_servers }}"


    - name: Remove ports
      os_port:
        validate_certs: false
        name: "{{ item.name }}"
        state: absent
      with_items: "{{ cc_servers }}"

    - name: Remove volumes
      os_volume:
        validate_certs: false
        name: "{{ item.name }}-data"
        state: absent
      with_items: "{{ cc_servers }}"


    - name: Remove swarm keypair
      os_keypair: 
        validate_certs: false
        state: absent
        name: "{{ cc_default_keypair_name }}"

    - name: Remove swarm router
      os_router:
        validate_certs: false
        state: absent
        name: "{{ cc_router_name }}"

    - name: Remove swarm network
      os_network:
        validate_certs: false
        state: absent
        name: "{{ cc_network_name }}"

    - name: Remove security group
      os_security_group:
        validate_certs: false
        name: "{{ item }}"
        state: absent
      with_items: "{{ cc_security_group_names }}"

    - name: Remove hosts from local ~/.ssh/config
      blockinfile:
        dest: "{{ base_directory }}/.ssh/config"
        state: absent
        marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ item }}"
      with_items: "{{ env_managers + env_db_managers + env_workers }}"

    - name: Remove host from /etc/hosts
      become: yes
      blockinfile:
        dest: /etc/hosts
        state: absent
        insertafter: EOF
        marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ item }}"
      with_items: "{{ env_managers + env_db_managers + env_workers }}"
