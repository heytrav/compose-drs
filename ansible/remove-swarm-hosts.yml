---

- include: preflight.yml

- name: Terminate swarm hosts and remove all networks, security groups, etc.
  hosts: localhost
  roles: [catalystcloud]
  vars:
    env_name: "staging"
    host_set: "{{ groups[env_name] | default([env_name]) }}"
    cc_servers: "{{ host_set|map('extract', hostvars, 'server_spec') | list }}"
    cc_security_groups: "{{ host_set| map('extract', hostvars, 'security_groups') |sum(start=[]) | unique | list }}"
    cc_security_group_names: "{{ cc_security_groups | map(attribute='group') | unique | list }}"
  tasks:
    - name: Connect to Catalyst Cloud
      os_auth:
        validate_certs: false

    - name: Remove floating ips from known_hosts
      known_hosts:
        name: "{{ item.name }}"
        state: absent
      with_items: "{{ cc_servers }}"

    - name: Remove swarm servers
      os_server:
        validate_certs: false
        name: "{{ item.name }}"
        state: absent
        delete_fip: true
      with_items: "{{ cc_servers }}"

    - name: Remove ports
      os_port:
        validate_certs: false
        name: "{{ item.name }}"
        state: absent
      with_items: "{{ cc_servers }}"

    - name: Remove volumes
      os_volume:
        validate_certs: false
        name: "{{ item.name }}-data"
        state: absent
      with_items: "{{ cc_servers }}"


    - name: Remove swarm keypair
      os_keypair: 
        validate_certs: false
        state: absent
        name: "{{ cc_default_keypair_name }}"

    - name: Remove swarm router
      os_router:
        validate_certs: false
        state: absent
        name: "{{ cc_router_name }}"

    - name: Remove swarm network
      os_network:
        validate_certs: false
        state: absent
        name: "{{ cc_network_name }}"

    - name: Remove security group
      os_security_group:
        validate_certs: false
        name: "{{ item }}"
        state: absent
      with_items: "{{ cc_security_group_names }}"

    - name: Remove hosts from local ~/.ssh/config
      blockinfile:
        dest: "{{  lookup('env', 'HOME')  }}/.ssh/config"
        state: absent
        marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ item }}"
      with_items: "{{ host_set }}"

    - name: Remove host from /etc/hosts
      become: yes
      blockinfile:
        dest: /etc/hosts
        state: absent
        insertafter: EOF
        marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ item }}"
      with_items: "{{ host_set }}"
